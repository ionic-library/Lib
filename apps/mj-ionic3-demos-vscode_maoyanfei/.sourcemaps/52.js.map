{"version":3,"sources":["../../src/pages/advance-demo/schedule/schedule.module.ts","../../src/pages/advance-demo/schedule/schedule.ts"],"names":[],"mappings":"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","file":"52.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SchedulePage } from './schedule';\n\nimport { ConferenceData } from '../../../providers/conference-data';\nimport { UserData } from '../../../providers/user-data';\n\n//import { SessionDetailPage } from '../session-detail/session-detail';\n//import { ScheduleFilterPage } from '../schedule-filter/schedule-filter';\n\n@NgModule({\n  declarations: [\n    SchedulePage,\n    //SessionDetailPage, \n    //ScheduleFilterPage\n  ],\n  imports: [\n    //SessionDetailPage, \n    //ScheduleFilterPage,\n    IonicPageModule.forChild(SchedulePage),\n  ],\n  providers: [\n    ConferenceData, UserData,\n  ]\n})\nexport class SchedulePageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/advance-demo/schedule/schedule.module.ts","import { Component, ViewChild } from '@angular/core';\n\nimport {\n    IonicPage, AlertController, App,\n    FabContainer, ItemSliding, List,\n    ModalController, NavController, ToastController, LoadingController, Refresher\n} from 'ionic-angular';\n\n\nimport { ConferenceData } from '../../../providers/conference-data';\nimport { UserData } from '../../../providers/user-data';\n\n//import { SessionDetailPage } from '../session-detail/session-detail';\n//import { ScheduleFilterPage } from '../schedule-filter/schedule-filter';\n\n@IonicPage()\n@Component({\n    selector: 'page-schedule',\n    templateUrl: 'schedule.html'\n})\nexport class SchedulePage {\n    // the list is a child of the schedule page\n    // @ViewChild('scheduleList') gets a reference to the list\n    // with the variable #scheduleList, `read: List` tells it to return the List and not a reference to the element\n    @ViewChild('scheduleList', { read: List }) scheduleList: List;\n\n    dayIndex = 0;\n    queryText = '';\n    segment = 'all';\n    excludeTracks: any = [];\n    shownSessions: any = [];\n    groups: any = [];\n    confDate: string;\n\n    constructor(\n        public alertCtrl: AlertController,\n        public app: App,\n        public loadingCtrl: LoadingController,\n        public modalCtrl: ModalController,\n        public navCtrl: NavController,\n        public toastCtrl: ToastController,\n        public confData: ConferenceData,\n        public user: UserData,\n    ) { }\n\n    ionViewDidLoad() {\n        this.app.setTitle('Schedule');\n        this.updateSchedule();\n    }\n\n    updateSchedule() {\n        // Close any open sliding items when the schedule updates\n        this.scheduleList && this.scheduleList.closeSlidingItems();\n\n        this.confData.getTimeline(this.dayIndex, this.queryText, this.excludeTracks, this.segment).subscribe((data: any) => {\n            this.shownSessions = data.shownSessions;\n            this.groups = data.groups;\n        });\n    }\n\n    presentFilter() {\n        let modal = this.modalCtrl.create('ScheduleFilterPage', this.excludeTracks);\n        modal.present();\n\n        modal.onWillDismiss((data: any[]) => {\n            if (data) {\n                this.excludeTracks = data;\n                this.updateSchedule();\n            }\n        });\n\n    }\n\n    goToSessionDetail(sessionData: any) {\n        // go to the session detail page\n        // and pass in the session data\n\n        this.navCtrl.push('SessionDetailPage', { sessionId: sessionData.id, name: sessionData.name });\n    }\n\n    addFavorite(slidingItem: ItemSliding, sessionData: any) {\n\n        if (this.user.hasFavorite(sessionData.name)) {\n            // woops, they already favorited it! What shall we do!?\n            // prompt them to remove it\n            this.removeFavorite(slidingItem, sessionData, 'Favorite already added');\n        } else {\n            // remember this session as a user favorite\n            this.user.addFavorite(sessionData.name);\n\n            // create an alert instance\n            let alert = this.alertCtrl.create({\n                title: 'Favorite Added',\n                buttons: [{\n                    text: 'OK',\n                    handler: () => {\n                        // close the sliding item\n                        slidingItem.close();\n                    }\n                }]\n            });\n            // now present the alert on top of all other content\n            alert.present();\n        }\n\n    }\n\n    /**\n     * 移除喜欢的分会场\n     * @param slidingItem 侧滑项\n     * @param sessionData 分会场数据\n     * @param title  分会场标题\n     */\n    removeFavorite(slidingItem: ItemSliding, sessionData: any, title: string) {\n        let alert = this.alertCtrl.create({\n            title: title,\n            message: '真要从你喜欢的分会场中移除该分会场吗？',\n            buttons: [\n                {\n                    text: '移除',\n                    handler: () => {\n                        // they want to remove this session from their favorites\n                        this.user.removeFavorite(sessionData.name);\n                        this.updateSchedule();\n\n                        // close the sliding item and hide the option buttons\n                        slidingItem.close();\n                    }\n                },\n                {\n                    text: '取消',\n                    handler: () => {\n                        // they clicked the cancel button, do not remove the session\n                        // close the sliding item and hide the option buttons\n                        slidingItem.close();\n                    }\n                }\n            ]\n        });\n\n        // 弹出alert\n        alert.present();\n    }\n\n    /**\n     * 打开分享到的外部网址\n     * @param network 网址\n     * @param fab 晶圆按钮\n     */\n    openSocial(network: string, fab: FabContainer) {\n        let loading = this.loadingCtrl.create({\n            content: `Posting to ${network}`,\n            duration: (Math.random() * 1000) + 500\n        });\n        loading.onWillDismiss(() => {\n            fab.close();\n        });\n        loading.present();\n    }\n\n    /**\n     * 刷新\n     * @param refresher 要刷新的内容\n     */\n    doRefresh(refresher: Refresher) {\n        this.confData.getTimeline(this.dayIndex, this.queryText, this.excludeTracks, this.segment)\n            .subscribe((data: any) => {\n                this.shownSessions = data.shownSessions;\n                this.groups = data.groups;\n\n                // 模拟一个网络请求, 该请求比从本地 json 文件中抽取的时间长\n                setTimeout(() => {\n                    refresher.complete();\n                    const toast = this.toastCtrl.create({\n                        message: '已更新所有分会场信息。',\n                        duration: 3000\n                    });\n                    toast.present();\n                }, 1000);\n            });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/advance-demo/schedule/schedule.ts"],"sourceRoot":""}