{"version":3,"sources":["../../src/pages/video-demos/video-demos.module.ts","../../src/pages/video-demos/video-demos.ts"],"names":[],"mappings":"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","file":"4.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { VideoDemosPage } from './video-demos';\n\n//import { RTCMultiConnection } from '../../providers/RTCMultiConnection'\n\n@NgModule({\n  declarations: [\n    VideoDemosPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(VideoDemosPage),\n  ],\n  providers: [\n    //RTCMultiConnection,\n  ]\n})\nexport class VideoDemosPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/video-demos/video-demos.module.ts","import { Component } from '@angular/core';\nimport { Platform, IonicPage, NavController, NavParams } from 'ionic-angular';\n\n//import { RTCMultiConnection } from '../../providers/RTCMultiConnection'\n\n//declare var getMediaElement: any;\n\n@IonicPage()\n@Component({\n  selector: 'page-video-demos',\n  templateUrl: 'video-demos.html',\n})\nexport class VideoDemosPage {\n  title: string;\n  videoInfo: string;\n  isBtnLeaveRoomDisabled = true;\n  isBtnOpenRoomDisabled = false;\n  isBtnJoinRoomDisabled = false;\n  roomId: string=\"abcdef\";\n  videosContainer: HTMLElement;\n \n  constructor(\n    //public connection:RTCMultiConnection,\n    private platform: Platform,\n    public navCtrl: NavController, public navParams: NavParams) {\n    if (this.platform.is(\"android\")) { this.title = \"(android)\"; }\n    else if (this.platform.is(\"ios\")) { this.title = \"(ios)\"; }\n    else if (this.platform.is(\"windows\")) { this.title = \"(windows)\"; }\n  }\n\n  // parses the query string\n  parseQueryString(queryString: string): Map<string, string> {\n    // if the query string is NULL\n    if (queryString == null) {\n      queryString = window.location.search.substring(1);\n    }\n\n    let params = new Map < string, string>();\n\n    let queries = queryString.split(\"&\");\n\n    queries.forEach((indexQuery: string) => {\n      let indexPair = indexQuery.split(\"=\");\n\n      let queryKey = decodeURIComponent(indexPair[0]);\n      let queryValue = decodeURIComponent(indexPair.length > 1 ? indexPair[1] : \"\");\n\n      params.set(queryKey, queryValue);\n    });\n\n    return params;\n  }\n\n  viewDidLoad() {\n    let params: URLSearchParams = new URLSearchParams();\n    let r = /([^&=]+)=?([^&]*)/g;\n\n    let match, search = window.location.search;\n    while (match = r.exec(search.substring(1))) {\n      let key = decodeURIComponent(match[1].replace(/\\+/g, ' '));\n      let val = decodeURIComponent(match[2].replace(/\\+/g, ' '));\n      params.set(key,val);\n    }\n    //window.URLSearchParams.arguments = params;\n    //self.URLSearchParams.arguments = params;\n\n    let roomid = '';\n    // if (localStorage.getItem(this.connection.socketMessageEvent)) {\n    //   roomid = <string>localStorage.getItem(this.connection.socketMessageEvent);\n    // } else {\n    //   roomid = this.connection.token();\n    // }\n    this.roomId=roomid;\n    // this.roomId.onkeyup = () => {\n      //  localStorage.setItem(this.connection.socketMessageEvent, roomid);\n    // };\n\n    let hashString = location.hash.replace('#', '');\n    if (hashString.length && hashString.indexOf('comment-') == 0) {\n      hashString = '';\n    }\n\n    //roomid = params.roomid;\n    if (!roomid && hashString.length) {\n      roomid = hashString;\n    }\n\n    this.InitRTCMultiConnection();  \n    \n    // auto-join-room\n    //this.reCheckRoomPresence(roomid);\n\n//     if (roomid && roomid.length) {\n//       this.roomId=roomid;\n// //      localStorage.setItem(this.connection.socketMessageEvent, roomid);\n//       this.disableInputButtons();\n//     }\n\n    // to make it one-to-one\n    // this.connection.maxParticipantsAllowed = 1;\n    // this.connection.onRoomFull = () => {\n    //   this.connection.closeSocket();\n    //   this.connection.attachStreams.forEach((stream: any) => {\n    //     stream.stop();\n    //   });\n      //alert('Room is full.');\n    //};\n  }\n\n  InitRTCMultiConnection() {\n//    this.videosContainer = document.getElementById('videos-container') as HTMLElement;\n\n    //this.connection = new RTCMultiConnection();\n\n    // 使用本项目自带的socket.io服务\n    //connection.socketURL = '/';\n    // 如果自带的socket-io服务不成功，可暂时先用下面的socket-io服务器来观察运行情况\n//    this.connection.socketURL = 'https://rtcmulticonnection.herokuapp.com:443/';\n\n    //this.connection.socketMessageEvent = 'video-conference-demo';\n\n//    this.connection.session = {\n    //   audio: true,\n    //   video: true,\n    //   data: false\n    // };\n\n    // this.connection.sdpConstraints.mandatory = {\n    //   OfferToReceiveAudio: true,\n    //   OfferToReceiveVideo: true\n    // };\n\n    // this.connection.videosContainer = this.videosContainer;\n    // this.connection.onstream = (event: any) => {\n    //   let width = this.videosContainer.clientWidth / 2 - 20;\n    //   let mediaElement = getMediaElement(event.mediaElement, {\n    //     title: event.userid,\n    //     buttons: ['full-screen'],\n    //     width: width,\n    //     showOnMouseEnter: false\n    //   });\n\n    //   this.connection.videosContainer.appendChild(mediaElement);\n\n    //   setTimeout(function () {\n    //     mediaElement.media.play();\n    //   }, 5000);\n\n    //   mediaElement.id = event.streamid;\n    // };\n\n    // this.connection.onstreamended = (event: any) => {\n    //   let mediaElement = document.getElementById(event.streamid) as HTMLElement;\n    //   if (mediaElement !== null) {\n    //     (mediaElement.parentNode as Node).removeChild(mediaElement);\n    //   }\n    // };\n\n    // this.connection.onopen = () => {\n    //   //this.btnLeaveRoom.setAttribute('disabled', 'false');\n    //   this.videoInfo = '你已连接到房间：' + this.connection.getAllParticipants().join(', ');\n    // };\n\n    // this.connection.onclose = () => {\n    //   if (this.connection.getAllParticipants().length) {\n    //     this.videoInfo = '你仍连接在该房间：' + this.connection.getAllParticipants().join(', ');\n    //   }\n    //   else {\n    //     this.videoInfo = '该房间session已关闭或所有成员都已离开。';\n    //   }\n    // };\n\n    // this.connection.onEntireSessionClosed = (event: any) => {\n    //   //this.btnLeaveRoom.setAttribute('disabled', 'true');\n    //   //this.btnOpenRoom.setAttribute('disabled', 'false');\n    //   //this.btnJoinRoom.setAttribute('disabled', 'false');\n    //   this.isBtnLeaveRoomDisabled = true;\n    //   this.isBtnOpenRoomDisabled = false;\n    //   this.isBtnJoinRoomDisabled = false;\n\n    //   this.connection.attachStreams.forEach((stream: any) => {\n    //     stream.stop();\n    //   });\n\n    //   // don't display alert for moderator\n    //   if (this.connection.userid === event.userid) return;\n    //   //Entire session has been closed by the moderator:\n    //   this.videoInfo = '所有session均已被关闭：' + event.userid;\n    // };\n\n  //   this.connection.onUserIdAlreadyTaken = (useridAlreadyTaken: string, yourNewUserId: string) => {\n  //     // seems room is already opened\n  //     this.connection.join(useridAlreadyTaken);\n  //     this.videoInfo = '你已连接到房间：' + yourNewUserId;\n  //   };\n  }\n\n  // InitUI() {\n  //   //this.btnLeaveRoom = document.getElementById('btn-leave-room') as HTMLElement;\n  //   //this.btnOpenRoom = document.getElementById('btn-open-room') as HTMLElement;\n  //   //this.btnJoinRoom = document.getElementById('btn-join-room') as HTMLElement;\n  //   //this.roomId = document.getElementById('room-id') as HTMLElement;\n  //   //this.videosContainer = document.getElementById('videos-container') as HTMLElement;\n\n  //   //this.btnLeaveRoom = <HTMLElement>document.querySelector('#btnLeaveRoom');\n  //   //this.btnOpenRoom = <HTMLElement>document.querySelector('#btnOpenRoom');\n  //   //this.btnJoinRoom = <HTMLElement>document.querySelector('btnJoinRoom');\n  //   //this.roomId = <HTMLElement>document.querySelector('roomId');\n  //   //this.videosContainer = <HTMLElement>document.querySelector('#videosContainer');\n  // }\n\n  btnOpenRoom_onclick(){\n    // this.disableInputButtons();\n    // this.connection.open(this.roomId, ()=> {\n    //   this.showRoomURL(this.connection.sessionid);\n    // });\n  }\n\n  btnJoinRoom_onclick(){\n    this.disableInputButtons();\n    //this.connection.join(this.roomId);\n  }\n\n  btnLeaveRoom_onclick(){\n    //this.disabled = true;\n    // if (this.connection.isInitiator) {\n    //   // use this method if you did NOT set \"autoCloseEntireSession===true\"\n    //   // for more info: https://github.com/muaz-khan/RTCMultiConnection#closeentiresession\n    //   this.connection.closeEntireSession(() => {\n    //     this.videoInfo = '所有session都已关闭。';\n    //   });\n    // }\n    // else {\n    //   this.connection.leave();\n    // }\n  }\n\n  disableInputButtons() {\n    //this.btnLeaveRoom.setAttribute('disabled', 'true');\n    //this.btnOpenRoom.setAttribute('disabled', 'true');\n    //this.btnJoinRoom.setAttribute('disabled', 'true');\n    this.isBtnOpenRoomDisabled = true;\n    this.isBtnJoinRoomDisabled = true;\n    this.isBtnLeaveRoomDisabled = true;\n\n  }\n\n\n  // ......................................................\n  // ......................Handling Room-ID................\n  // ......................................................\n\n  showRoomURL(roomid:string) {\n    let roomHashURL = '#' + roomid;\n    let roomQueryStringURL = '?roomid=' + roomid;\n\n    //Unique URL for your room:\n    let html = '<h2>你的房间：</h2><br>';\n\n    html += 'Hash URL: <a href=\"' + roomHashURL + '\" target=\"_blank\">' + roomHashURL + '</a>';\n    html += '<br>';\n    html += 'QueryString URL: <a href=\"' + roomQueryStringURL + '\" target=\"_blank\">' + roomQueryStringURL + '</a>';\n\n    let roomURLsDiv = document.getElementById('room-urls') as HTMLElement;\n    roomURLsDiv.innerHTML = html;\n\n    roomURLsDiv.style.display = 'block';\n  }\n\n//  reCheckRoomPresence(roomid:string) {\n    // this.connection.checkPresence(roomid, (isRoomExists: boolean)=> {\n    //   if (isRoomExists) {\n    //     this.connection.join(roomid);\n    //     return;\n    //   }\n    //   setTimeout(this, 5000);\n    // });\n//  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/video-demos/video-demos.ts"],"sourceRoot":""}